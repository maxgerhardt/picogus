name: CMake Build
on: [push, pull_request]
jobs:
    build:
      runs-on: ubuntu-latest
      env: 
        BUILD_TYPE: "Release"
        PICOSDK_VER: "1.5.1"
        PICOEXTRA_VER: "sdk-1.5.1"
      steps:
      - name: Checkout repo with submodules
        uses: actions/checkout@v4
        with:
            submodules: recursive

      - name: Install Arm GNU Toolchain (arm-none-eabi-gcc)
        uses: carlosperate/arm-none-eabi-gcc-action@v1
        with:
          release: '12.3.Rel1'

      - name: Clone Pico-SDK
        run: git clone -b "$PICOSDK_VER" --recursive https://github.com/raspberrypi/pico-sdk.git ${{github.workspace}}/pico/pico-sdk

      - name: Clone Pico-Extras
        run: git clone -b "$PICOEXTRA_VER" --recursive https://github.com/raspberrypi/pico-extras.git ${{github.workspace}}/pico/pico-extras

      - name: Create Build Environment
        # Some projects don't allow in-source building, so create a separate build directory
        # We'll use this as our working directory for all subsequent commands
        run: cmake -E make_directory ${{github.workspace}}/build

      - name: Patch CMake (disable LTO)
        run: sed -i 's/add_compile_options(-flto=jobserver)//g' ${{github.workspace}}/sw/CMakeLists.txt

      - name: Build GUS Firmware
        # Use a bash shell so we can use the same syntax for environment variable
        # access regardless of the host operating system
        shell: bash
        working-directory: ${{github.workspace}}/build
        run: |
          cmake $GITHUB_WORKSPACE/sw -DCMAKE_BUILD_TYPE=$BUILD_TYPE -DPROJECT_TYPE="GUS" "-DPICO_SDK_PATH=${{github.workspace}}/pico/pico-sdk" "-DPICO_EXTRAS_PATH=${{github.workspace}}/pico/pico-extras"
          cmake --build . --config $BUILD_TYPE --parallel $(nproc)

      - name: Build OPL Firmware
        working-directory: ${{github.workspace}}/build
        shell: bash
        run: |
          cmake $GITHUB_WORKSPACE/sw -DCMAKE_BUILD_TYPE=$BUILD_TYPE -DPROJECT_TYPE="OPL" "-DPICO_SDK_PATH=${{github.workspace}}/pico/pico-sdk" "-DPICO_EXTRAS_PATH=${{github.workspace}}/pico/pico-extras"
          cmake --build . --config $BUILD_TYPE --parallel $(nproc)
