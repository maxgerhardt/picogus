name: CMake Build
on: [push, pull_request]
jobs:
    build:
      runs-on: ubuntu-latest
      env: 
        BUILD_TYPE: "Release"
        PICOSDK_VER: "1.5.1"
        PICOEXTRA_VER: "sdk-1.5.1"
      steps:
      - name: Clean workspace
        run: |
          echo "Cleaning up previous run"
          rm -rf "${{ github.workspace }}"
          mkdir -p "${{ github.workspace }}"
  
      - name: Checkout repo
        uses: actions/checkout@v4
  
      - name: Checkout submodules
        run: git submodule update --init

      - name: Clone Pico-SDK
        run: git clone -b "$PICOSDK_VER" --recursive https://github.com/raspberrypi/pico-sdk.git ${{github.workspace}}/pico/pico-sdk

      - name: Clone Pico-Extras
        run: git clone -b "$PICOEXTRA_VER" --recursive https://github.com/raspberrypi/pico-extras.git ${{github.workspace}}/pico/pico-extras

      - name: Create Build Environment
        # Some projects don't allow in-source building, so create a separate build directory
        # We'll use this as our working directory for all subsequent commands
        run: cmake -E make_directory ${{github.workspace}}/build
  
      - name: Configure CMake
        # Use a bash shell so we can use the same syntax for environment variable
        # access regardless of the host operating system
        shell: bash
        working-directory: ${{github.workspace}}/build
        run: cmake $GITHUB_WORKSPACE/sw -DCMAKE_BUILD_TYPE=$BUILD_TYPE "-DPICO_SDK_PATH=${{github.workspace}}/pico/pico-sdk" "-DPICO_EXTRAS_PATH=${{github.workspace}}/pico/pico-extras"
  
      - name: Build
        working-directory: ${{github.workspace}}/build
        shell: bash
        # Execute the build. You can specify a specific target with "--target <NAME>"
        run: cmake --build . --config $BUILD_TYPE --parallel $(nproc)